syntax = "proto3";
package transaction;
import "proto/accountState.proto";
import "proto/smartContractExecuteRequest.proto";
option go_package = "/proto";

message Transaction {
  bytes Hash = 1;  // hash của transaction này
  bytes FromAddress = 2; // địa chỉ của account tạo transaction 
  bytes ToAddress = 3; // địa chỉ của account tạo transaction 
  bytes PubKey = 4; // pubkey của account tạo transaction
  bytes PendingUse = 5;  // số lượng pending mà user muốn thêm vào balance trước khi chuyển. Số tiền chuyển sẽ là PreviousData.Balance + PendingUser - Balance 
  bytes Balance = 6;  // số dư sau khi transaction này đươcj thực hiện
  bytes Amount = 7; // số tiền được chuyển
  bytes Fee = 8; // phí cho transaction này
  TransactionData Data = 9; // là data để gọi smart contract,
  Transaction PreviousTransaction = 10; // transaction trước đó của account tạo ra transaction này (trong này có hash rôi nên mình ko cần thêm field lasthash nữa, trong thông tin previous data  của previous data có thể để null hoặc chỉ cần có hash)
  bytes Sign = 11; // chữ ký bls được ký bằng private key của account tạo account trên hash của transaction
}

message HashData {
  bytes FromAddress = 1; // địa chỉ của account tạo transaction 
  bytes ToAddress = 2; // địa chỉ của account tạo transaction 
  bytes PubKey = 3; // pubkey của account tạo transaction
  bytes PendingUse = 4;  // số lượng pending mà user muốn thêm vào balance trước khi chuyển. Số tiền chuyển sẽ là PreviousData.Balance + PendingUser - Balance 
  bytes Balance = 5;  // số dư sau khi transaction này đươcj thực hiện
  bytes Amount = 6; 
  bytes Fee = 7; 
  TransactionData Data = 8; // là data để gọi smart contract,
  bytes PreviousHash = 9; // hash cuar transaction trước đó
}

message TransactionData {
  smartContractExecuteRequest.EXECUTE_TYPE Type = 1;
  DeployData DeployData = 2;
  CallData  CallData = 3;
  repeated bytes RelatedAddresses = 4;
}

message DeployData {
  bytes Code = 1;
  string StorageHost = 2;
  accountState.FEETYPE FeeType = 3; //0:none,  1: user, 2: smartContract
}

message CallData {
  bytes Input  = 1; // 
  bytes CommissionSign = 2; // chữ ký ủy quyền tính phí smartContract
}

message Transactions {
  repeated Transaction Transactions = 1;
}

